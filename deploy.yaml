name: Deploy
on:
  push:
    branches:
      - main

env:
  REGION: us-east-1
  ECR: "ux-au-cms"
  BUCKET_NAME: "elasticbeanstalk-us-east-1-765063663900"
  APP_NAME: "ux-au-cms"
  ENV_NAME: "Uxaucms-env-1"

jobs:
  setup:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Make env
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_APP_KEYS: "${{ secrets.APP_KEYS }}"
          envkey_API_TOKEN_SALT: "${{ secrets.API_TOKEN_SALT }}"
          envkey_ADMIN_JWT_SECRET: "${{ secrets.ADMIN_JWT_SECRET }}"
          envkey_JWT_SECRET: "${{ secrets.JWT_SECRET }}"
          envkey_DATABASE_HOST: "${{ secrets.DATABASE_HOST }}"
          envkey_DATABASE_PORT: "${{ secrets.DATABASE_PORT }}"
          envkey_DATABASE_NAME: "${{ secrets.DATABASE_NAME }}"
          envkey_DATABASE_USERNAME: "${{ secrets.DATABASE_USERNAME }}"
          envkey_DATABASE_PASSWORD: "${{ secrets.DATABASE_PASSWORD }}"
          envkey_AWS_BUCKET: "${{ secrets.AWS_BUCKET }}"
          file_name: .env
          fail_on_empty: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Update docker image for deployment
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR }}
          IMAGE_TAG: ${{ github.sha }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: Dockerrun.aws.json
          field: Image.Name
          value: "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{env.IMAGE_TAG }}"
          
      - name: Generate deployment package
        run: zip "${{github.run_number}}-package.zip" Dockerrun.aws.json
      - name: Upload package
        run: aws s3 cp ./"${{github.run_number}}-package.zip" s3://${{ env.BUCKET_NAME }}/"${{github.run_number}}-package.zip"
      - name: Create application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name "${{ env.APP_NAME }}" \
          --source-bundle S3Bucket="${{ env.BUCKET_NAME }}",S3Key="${{github.run_number}}-package.zip" \
          --version-label "ver-${{github.run_number}}" \
          --description "commit-sha-${{ github.sha }}"
          
      - name: Deploy
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.ENV_NAME }} --version-label "ver-${{github.run_number}}"
      - name: Wait for deployment to roll out
        run: aws elasticbeanstalk wait environment-updated --environment-name ${{ env.ENV_NAME }} --version-label "ver-${{github.run_number}}"
